name: Auto Update Changelog

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  update-changelog:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm install -g conventional-changelog-cli
          npm install

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Generate changelog
        run: |
          # Run our custom changelog generator
          node scripts/update-changelog.js

          # Also generate with conventional-changelog as backup
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit changelog
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git add CHANGELOG.md package.json
          git commit -m "docs(changelog): auto-update changelog [skip ci]"
          git push

      - name: Create Release
        if: steps.verify-changed-files.outputs.changed == 'true' && github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body_path: ./RELEASE_NOTES.md
          draft: false
          prerelease: false

  notify-changelog-update:
    needs: update-changelog
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify on success
        if: needs.update-changelog.result == 'success'
        run: |
          echo "✅ Changelog updated successfully!"

      - name: Notify on failure
        if: needs.update-changelog.result == 'failure'
        run: |
          echo "❌ Changelog update failed!"
