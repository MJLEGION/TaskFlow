# Docker Compose for TaskFlow Local Development
services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: taskflow-db
    environment:
      POSTGRES_DB: taskflow
      POSTGRES_USER: taskflow_user
      POSTGRES_PASSWORD: taskflow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskflow_user -d taskflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: taskflow-backend
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://taskflow_user:taskflow_password@database:5432/taskflow
      JWT_SECRET: your-jwt-secret-key-for-development
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - taskflow-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: npm run dev

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: taskflow-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      CHOKIDAR_USEPOLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - taskflow-network
    depends_on:
      - backend
    stdin_open: true
    tty: true
    command: npm start

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: taskflow-redis
    ports:
      - "6379:6379"
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  taskflow-network:
    driver: bridge