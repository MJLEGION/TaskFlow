{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{toast}from'react-hot-toast';import{projectsAPI,tasksAPI,timeAPI}from'../../services/api';import ProjectCard from'./ProjectCard';import TaskSummary from'./TaskSummary';import{Plus,Clock,CheckCircle,AlertCircle}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[projects,setProjects]=useState([]);const[tasks,setTasks]=useState([]);const[stats,setStats]=useState({totalProjects:0,activeTasks:0,completedToday:0,timeToday:0});const[loading,setLoading]=useState(true);useEffect(()=>{fetchDashboardData();},[]);const fetchDashboardData=async()=>{try{const[projectsRes,tasksRes,timeRes]=await Promise.all([projectsAPI.getAll(),tasksAPI.getAll(),timeAPI.getAll()]);const projectsData=projectsRes.data;const tasksData=tasksRes.data;const timeData=timeRes.data;setProjects(projectsData.slice(0,6));// Show recent projects\nsetTasks(tasksData.filter(task=>task.status!=='completed').slice(0,5));// Calculate stats\nconst today=new Date().toDateString();const completedToday=tasksData.filter(task=>task.completedAt&&new Date(task.completedAt).toDateString()===today).length;const timeToday=timeData.filter(entry=>new Date(entry.startTime).toDateString()===today).reduce((total,entry)=>total+(entry.duration||0),0);setStats({totalProjects:projectsData.length,activeTasks:tasksData.filter(task=>task.status!=='completed').length,completedToday,timeToday:Math.round(timeToday/3600)// Convert to hours\n});}catch(error){toast.error('Failed to load dashboard data');}finally{setLoading(false);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600\"})});}const statCards=[{name:'Total Projects',value:stats.totalProjects,icon:FolderOpen,color:'bg-blue-500'},{name:'Active Tasks',value:stats.activeTasks,icon:AlertCircle,color:'bg-yellow-500'},{name:'Completed Today',value:stats.completedToday,icon:CheckCircle,color:'bg-green-500'},{name:'Hours Today',value:stats.timeToday,icon:Clock,color:'bg-purple-500'}];return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-r from-primary-600 to-primary-700 rounded-lg p-6 text-white\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold\",children:\"Welcome back!\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-primary-100\",children:\"Here's what's happening with your projects today.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",children:statCards.map(stat=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-white overflow-hidden shadow rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"p-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0\",children:/*#__PURE__*/_jsx(\"div\",{className:\"\".concat(stat.color,\" rounded-md p-3\"),children:/*#__PURE__*/_jsx(stat.icon,{className:\"h-6 w-6 text-white\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"ml-5 w-0 flex-1\",children:/*#__PURE__*/_jsxs(\"dl\",{children:[/*#__PURE__*/_jsx(\"dt\",{className:\"text-sm font-medium text-gray-500 truncate\",children:stat.name}),/*#__PURE__*/_jsx(\"dd\",{className:\"text-lg font-medium text-gray-900\",children:stat.value})]})})]})})},stat.name))}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-2 gap-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Recent Projects\"}),/*#__PURE__*/_jsx(Link,{to:\"/projects\",className:\"text-primary-600 hover:text-primary-500 text-sm font-medium\",children:\"View all\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:projects.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-4\",children:projects.map(project=>/*#__PURE__*/_jsx(ProjectCard,{project:project,compact:true},project.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No projects yet\"}),/*#__PURE__*/_jsxs(Link,{to:\"/projects\",className:\"mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-primary-700 bg-primary-100 hover:bg-primary-200\",children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),\"Create your first project\"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"px-6 py-4 border-b border-gray-200\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900\",children:\"Active Tasks\"}),/*#__PURE__*/_jsx(Link,{to:\"/tasks\",className:\"text-primary-600 hover:text-primary-500 text-sm font-medium\",children:\"View all\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"p-6\",children:tasks.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-3\",children:tasks.map(task=>/*#__PURE__*/_jsx(TaskSummary,{task:task},task.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No active tasks\"}),/*#__PURE__*/_jsxs(Link,{to:\"/projects\",className:\"mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-primary-700 bg-primary-100 hover:bg-primary-200\",children:[/*#__PURE__*/_jsx(Plus,{className:\"h-4 w-4 mr-2\"}),\"Add a task\"]})]})})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Link","toast","projectsAPI","tasksAPI","timeAPI","ProjectCard","TaskSummary","Plus","Clock","CheckCircle","AlertCircle","jsx","_jsx","jsxs","_jsxs","Dashboard","projects","setProjects","tasks","setTasks","stats","setStats","totalProjects","activeTasks","completedToday","timeToday","loading","setLoading","fetchDashboardData","projectsRes","tasksRes","timeRes","Promise","all","getAll","projectsData","data","tasksData","timeData","slice","filter","task","status","today","Date","toDateString","completedAt","length","entry","startTime","reduce","total","duration","Math","round","error","className","children","statCards","name","value","icon","FolderOpen","color","map","stat","concat","to","project","compact","id"],"sources":["C:/Users/USER/Desktop/TaskFlow/TaskFlow/frontend/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport { projectsAPI, tasksAPI, timeAPI } from '../../services/api';\r\nimport ProjectCard from './ProjectCard';\r\nimport TaskSummary from './TaskSummary';\r\nimport { Plus, Clock, CheckCircle, AlertCircle } from 'lucide-react';\r\n\r\nconst Dashboard = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalProjects: 0,\r\n    activeTasks: 0,\r\n    completedToday: 0,\r\n    timeToday: 0\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      const [projectsRes, tasksRes, timeRes] = await Promise.all([\r\n        projectsAPI.getAll(),\r\n        tasksAPI.getAll(),\r\n        timeAPI.getAll()\r\n      ]);\r\n\r\n      const projectsData = projectsRes.data;\r\n      const tasksData = tasksRes.data;\r\n      const timeData = timeRes.data;\r\n\r\n      setProjects(projectsData.slice(0, 6)); // Show recent projects\r\n      setTasks(tasksData.filter(task => task.status !== 'completed').slice(0, 5));\r\n\r\n      // Calculate stats\r\n      const today = new Date().toDateString();\r\n      const completedToday = tasksData.filter(\r\n        task => task.completedAt && new Date(task.completedAt).toDateString() === today\r\n      ).length;\r\n\r\n      const timeToday = timeData\r\n        .filter(entry => new Date(entry.startTime).toDateString() === today)\r\n        .reduce((total, entry) => total + (entry.duration || 0), 0);\r\n\r\n      setStats({\r\n        totalProjects: projectsData.length,\r\n        activeTasks: tasksData.filter(task => task.status !== 'completed').length,\r\n        completedToday,\r\n        timeToday: Math.round(timeToday / 3600) // Convert to hours\r\n      });\r\n    } catch (error) {\r\n      toast.error('Failed to load dashboard data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const statCards = [\r\n    {\r\n      name: 'Total Projects',\r\n      value: stats.totalProjects,\r\n      icon: FolderOpen,\r\n      color: 'bg-blue-500'\r\n    },\r\n    {\r\n      name: 'Active Tasks',\r\n      value: stats.activeTasks,\r\n      icon: AlertCircle,\r\n      color: 'bg-yellow-500'\r\n    },\r\n    {\r\n      name: 'Completed Today',\r\n      value: stats.completedToday,\r\n      icon: CheckCircle,\r\n      color: 'bg-green-500'\r\n    },\r\n    {\r\n      name: 'Hours Today',\r\n      value: stats.timeToday,\r\n      icon: Clock,\r\n      color: 'bg-purple-500'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Welcome Section */}\r\n      <div className=\"bg-gradient-to-r from-primary-600 to-primary-700 rounded-lg p-6 text-white\">\r\n        <h1 className=\"text-3xl font-bold\">Welcome back!</h1>\r\n        <p className=\"mt-2 text-primary-100\">\r\n          Here's what's happening with your projects today.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Stats Grid */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        {statCards.map((stat) => (\r\n          <div key={stat.name} className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n            <div className=\"p-5\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <div className={`${stat.color} rounded-md p-3`}>\r\n                    <stat.icon className=\"h-6 w-6 text-white\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"ml-5 w-0 flex-1\">\r\n                  <dl>\r\n                    <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                      {stat.name}\r\n                    </dt>\r\n                    <dd className=\"text-lg font-medium text-gray-900\">\r\n                      {stat.value}\r\n                    </dd>\r\n                  </dl>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Projects and Tasks Grid */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Recent Projects */}\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Recent Projects</h3>\r\n              <Link\r\n                to=\"/projects\"\r\n                className=\"text-primary-600 hover:text-primary-500 text-sm font-medium\"\r\n              >\r\n                View all\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6\">\r\n            {projects.length > 0 ? (\r\n              <div className=\"grid grid-cols-1 gap-4\">\r\n                {projects.map((project) => (\r\n                  <ProjectCard key={project.id} project={project} compact />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-6\">\r\n                <p className=\"text-gray-500\">No projects yet</p>\r\n                <Link\r\n                  to=\"/projects\"\r\n                  className=\"mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-primary-700 bg-primary-100 hover:bg-primary-200\"\r\n                >\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Create your first project\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Tasks */}\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-6 py-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-medium text-gray-900\">Active Tasks</h3>\r\n              <Link\r\n                to=\"/tasks\"\r\n                className=\"text-primary-600 hover:text-primary-500 text-sm font-medium\"\r\n              >\r\n                View all\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6\">\r\n            {tasks.length > 0 ? (\r\n              <div className=\"space-y-3\">\r\n                {tasks.map((task) => (\r\n                  <TaskSummary key={task.id} task={task} />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-6\">\r\n                <p className=\"text-gray-500\">No active tasks</p>\r\n                <Link\r\n                  to=\"/projects\"\r\n                  className=\"mt-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-primary-700 bg-primary-100 hover:bg-primary-200\"\r\n                >\r\n                  <Plus className=\"h-4 w-4 mr-2\" />\r\n                  Add a task\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}